Zusammenfassung Linux Fundamentals:
#####################################################################################
Introduction:
1. Linux Structure:
- Philosophy:
	- Linux hat 5 Grundprinzipien
	- 1. Everthing ia a file
	- 2. Small, single-purpose programs
	- 3. Ability to chain programs together to perform complex tasks
	- 4. Avoid captive user interfaces
	- 5. Configuration data stored in a text file
- Components:
	- Bootloader:
	Ein Teil des Codes, der den Bootvorgang zum Starten des Betriebssystem einleitet
	- OS Kernel:
	Der OS Kernel ist die Hauptkomponente eines Betriebssystem
	In ihm ist die Prozess- und Datenorganisation festgelegt, auf der alle weiteren Softwarebestandteile des Betriebssystems aufbauen
	- Daemons:
	Hintergrund Services werden Daemons in Linux genannt
	Ihr Zweck ist das sicherstellen von speziellen Diensten wie Drucken, Multimedia und Planung
	Die kleinen Programme werden nach dem Login geladen
	Die Abkuerzung von Daemon steht fuer DiskAndExecutionMONitor
	- OS Shell:
	Die OS Shell ist die Kommandozeile in Linux
	Es ist das Interface zwischen Betriebssystem und User
	Die am haeufig verwendeten Shells sind Bash,Tcsh/Csh,Ksh,Zsh und Fish
	- Grahics server:
	Bietet ein grafisches Sub-System an welches X oder X-Server geannt wird
	Erlaubt das ausfuehren von grafische Programme lokal oder remote
	- Window Manager:
	Window Manager ist die GUI in Linux
	Gnome, KDE, Mate, Unity und Cinnamon usw sind verschiedene Optionen fuer den Window Manager
	Ein Dektop Umgebung kommt meistens mit verschiednen Anwendungen wie Fileexplorer und Webbrowser usw
	- Utilities:
	Anwendungen oder Hilfsmittel die verschiedene Aufgaben fuer ein Programm/User uebernehmen
- Linux Architecture:
- Das Linux Betriebssystem kann in verschiedene Schichten unterteilt werden
	- Hardware: RAM, Speicher, CPU und mehr
	- Kernel: Virtualisiert verschiedene Hardware Ressourcen
	- Shell: Eine Kommandozeile indem der User Befehle eingibt, die dann Befehle des Kernels ausfuehrt
	- System Utility: Macht alle Betriebssystem Funktionen verfuegbar
- File System Hierarchy:
	- Das Dateisystem in Linux ist baumartige hierachisch strukturiert
2. Introduction to Shell:
- Ein Linux terminal nennt man auch Shell oder Kommandozeile
- Stellt eine Moeglichkeit fuer Ein- und Ausgabe zwischen dem User und dem Kernel bereit 
- Terminal Emulators:
	- Terminal Emulators ist meistens fuer eine Shell benutzt
	- Terminal Emulatoren sind Gnome Terminal, XFCE4 Terminal, XTerm
	- Mutiplexers fassen mehrere Terminals in einme zusammen in einem Screen.
	- Einer dieser Beispiele ist Tmux oder Gnu Screen 
- Shell:
	- Die meistgenutzte Shell fuer Linux ist Bash (Bourne-Again Shell) welches Teil vom GNU Projekt ist
	- Ausser Bash gibt es  Tcsh/Csh, Ksh, Zsh, Fish Shells

#####################################################################################
The Shell:
1. Promt Description:
	- Format ist: <Username>@<Hostname><current working directory>$
	- Host Verzeichnis ist mit ~ gekennzeichnet
	- Das Dollar Symbol steht fuer einen User
	- Das Hash Symbol steht fuer den Root User
2. Getting Help:
	- Mit <man Befehl> kann eine Hilfe angezeigt werden
	- Mit <Befehl --help> kann ebenso eine Hilfe angezeigt werden
3. System Information:
	- Mit verschiedenen Befehlen koennen sich Informationen ueber Systeme abgefragt werden:
	- whoami: Zeigt Usernamen an
	- id: Zeigt User Identitaet
	- hostname: Zeigt den namen des Hostsystems an
	- uname: Zeigt Basisinformationen ueber das System
	- pwd: Zeigt aktuelles Verzeichniss an
	- ifconfig: Zeigt alle Informationen ueber Netzwerk Interfaces
	- ip: Zeigt und verwaltet Routing, Netzwerkgeraete, Interfaces oder Tunnels
	- netstat: Zeigt Netzwerkstatus an
	- ss: Untersucht Sockets 
	- ps: Zeigt Prozess Status
	- who: Zeigt an wer eingeloggt ist
	- env: Zeigt Umgebungsvariablen oder setzt sie
	- lsblk: Listet block Geraete
	- lsusb: Listet USB Geraete
	- lsof: Listet offene Dateien
	- lspci: Listet PCI Gerate
SSH(Secure Shell): ssh [username]@[IP-Adresse]
	- Erlaubt Users sich mit Remote Computern zu verbinden
	- SSH kommt ohne GUI

#####################################################################################
System Management:
1. User Management:
	- In Linux koennen User zu spezifischen Gruppen hinzugefuegt werden
	- Meistens gehoeren User nue einer Gruppe an
	- Die meistens Gruppen haben das Recht spezifische Dateien oder Verzeichnisse zu aendern
	- sudo: Fuehre einen Befehl als einen anderen User aus
	- su: Der Befehl wird als Superuser ausgefuehrt
	- useradd: Fuegt einen User hinzu
	- userdel: Entfernt einen User
	- usermod: Modifieziert einen User
	- addgroup: Fuegt eine Gruppe hinzu
	- delgroup: Entfernt eine Gruppe
	- passwd: Wecheselt Passwort von User
2. Package Management:
	- Packages beinhalten binaries von Awnendungen
	- Packet Manager Systeme bieten folgene Features:
		- Pakete downloaden
		- Installierte abhaengige Software
		- Standard Binary Format
		- Standard Installation und Konfiguration in Dateien
		- Qualitaetskontrolle
	- Kommandos:
		- dpkg: Mit DPKG werden Debian Pakete installiert mit der Endung .deb
		- apt: APT ist ein Paketmanager. APT installiert auch alle abhaengigkeiten die dazu gebraucht werden
		- aptitude: Ist eine Alternative zu apt und bietet ein high level Interface
		- snap: Verwalte snap Pakete. Meistens fuer Cloud, Server, Desktop und IOT Geraete genutzt
		- gem: Gem ist der Frontend Paketmanager von Ruby 
		- pip: Pip ist der Paketmanager fuer Python 
		- git: Git ist ein Manager fuer ein interne Codestruktur
	APT(Adavanced Package Manager):
		- Mit APT werden Pakete heruntergeladen
		- Mit DPKG werden dann die Pakete installiert
		- In /etc/apt/sources.list stehen die Quellen fuer die Pakete
		- In /etc/apt/sources.list.d/ stehen die Quellen fuer die
		- APT benutzt eine Datenbank die APT Cache genannt wird
		- Beispiel:
			- apt-cache search <PAKET>: Gibt alle Pakete Pakete mit impacket aus
			- apt-cache show <PAKET>: Gibt Informationen zu dem Paket aus
			- apt list --installed: Gibt alle installierte Pakete aus
	GIT: 
		- Mit GIT koennen Projekte aus Github runtergeladen werden

	DPKG:
		- Programme koennen auch mit wget runtergeladen werden
		- DPKG wird dann dafuer benutzt um das Programm zu installieren
		- Mit strace wird getestet ob die Programme funktionieren

3.Service and Process Management:
- Es sind zwei arten von Services.
- Eine Art von Services wird von System beim hochfahren benoetigt. Solche Services sind zum Beispiel Hardware Services usw.
- Die andere Art von Services werden von einem User selbst installiert. Diese Services laufen im Hintergrund ohne Userinteraktion. Diese Services werden auch daemons genannt und werden an einem d am Ende des Namen erkannt wie sshd oder systemd
- Die meisten Linux Betriebssysteme sind auf systemd gewechselt. Dieser daemon ist ein Init Prozess und hat die ProzessID 1. Dieser Prozess verwaltet Prozesse. Alle Prozesse haben eine Prozessidentifikationsnummer(PID) die unter /proc/ angesehen werden kann. Ein Prozess kann ein PPID eine ParentprocessID haben.
Systemctl:
	- systemctl enable <service>: Startet den Service sofort beim Start des PCs
	- systemctl start <service>: Start den Service
	- systemctl status <service>: Gibt den Status von einem Service aus
	- ps liefert eine Momentaufnahme der laufenden Prozesse
	- ps -aux | grep ssh: Zeigt Informationen zum ssh Prozess
	- systemctl list-units --type=service: Gibt alle Services aus
	- journalctl: Gibt das Log zu den Services aus

- Kill a Process:
	- Ein Prozess kann folgenen Status haben:
		- Running
		- Waiting(Warten auf ein Event oder System Ressourcen)
		- Stopped
		- Zombie(Gestoppt aber immernoch in der Prozesstabelle)
	- Ein Prozess kann mit kill, pkill, pgrep, killall geschlossen werden

- Background a Process:
	- Mit <Strg+Z> koennen Prozesse gestoppt werden
	- Alle Background Prozesse koennen mit <Jobs> angezeigt werden
	- Mit <bg> koennen die Prozesse im Hintergrund weiter laufen lassen

- Foreground a Process: 
	- Mit <fg ID> koennen Prozesse von einem Background Prozess in einen Vordergrund Prozess umgeaendert werden

- Execute Multiple Commands:
	- Es gibt 3 Moeglichkeiten Befehle miteinander zu verbinden:
		- Semicolon(;)
			- Fuehrt alle Befehle aus ignoriert alle vorherigen Befehle und Errors
		- Doppel Und(&&)
			- Wenn ein Befehl einen Error ausgibt werden die nachfolgenden Befehle nicht ausgegeben
		- Pipes(|)
			- Die Ausgaben des vorherigen Befehls ist die Eingabe des nachfolgenden Befehls

4. Working with Web Services:
	- Ein essentielle Komponente ist die Kommunikation mit einem Web-Server
	- Einen der meiste benutzten Webserver neben IIS und Nginx ist Apache
	- Fuer die meisten Apache Server gibt es Module fuer die Kommunikation zwischen Webserver und und Browser
	- mod_ssl: Verschluesselt die Kommunikation
	- mod_proxy: Webserver als Proxy
	- mod_headers: HTTP Header Daten aendern
	- mod_rewrite: HTTP Url aendern
	CURL: 
		- CURL ist ein Programm, das es ermöglicht, ohne Benutzerinteraktion Dateien von oder zu einem Server zu übertragen
	Wget:
		- wget laedt Dateien von HTTP/FTP Server herunter
		- Der Inhalt wird im Vergleich zu curl lokal gespeichert
	Python3:
		- Mit Python ist es auch moelich einen Webserver zu starten
		- Das Verzeichnis vom Server ist immer das Verzeichnis indem der Befehl zum starten ausgefuehrt worden ist
#####################################################################################
Workflow:
1. Navigation:
	- pwd: Printed Working Directory. Gibt das aktuelle Verzeichnis aus
	- ls: List. Listet Verzeichnisinhalte auf
		- ls -i zeigt Index nummer an
		- ls -l Zeigt alle Informationen
	- cd: Change Directory. Wechselt das Verzeichnis. ~ ist das Homeverzeichnis
2. Working with Files and Directories:
	- touch: Erzeugt eine leer Datei
	- mkdir: Erzeugt eine Verzeichnis
		- mkdir -p <ELTERN_VERZEICHNIS>
	- Tree: Zeigt die gesamte unterliegende Verzeichnisstruktur an
	- mv: Bewegt Dateien und Verzeichnise
		- mv <Anfang> <Ziel>
3. Editing Files:
	- Es gibt viele Wege auf Linux eine Datei zu aendern
	- Eine davon ist nano
	- Cat gibt den Inhalt einer Datein im Terminal aus
4. Find Files and Directories:
	- Which<Programmnamen>: Which gibt den Pfad zu einem Programm zuerueck
	- Find <Location> <options>: 
	- Find -name *.conf: Zeigt alle .conf Dateien an
	- Locate: Der Befehl Locate durchsucht eine Datenbank indem alle Dateien und Verzeichnisse stehen.
		- Mit sudo updattedb wird diese Datenbank aktualisiert
		- Mit locate *.conf wird nach allen .conf Dateien gesucht
	- Gibt alle .conf Dateien aus die deren groesse zwischen 25k und 28k liegt
	- find / -type f -name *.conf -size +25k -size -28k -exec ls -al {} \; 2>/dev/nul

5. File Descriptors and Redirections:
	- Ein File Descriptor (FD) ist ein Indikator im Linux Betriebssystem fuer eine Input/Output Operation
	- Es gibt in Linux standardmaessig 3 File Descriptoren:
		- STDIN 0:
			- <: Um die Standardeingabe des Befehls zu veraendern
			- <<: Fuegt dem Input etwas hinzu
		- STDOUT 1:
			- 1> text_file
			- Schreibt die Ausgabe des Befehlt in eine Datei
			- >: Um die Standardausgabe des Befehls zu veraendern
			- >>: Fuegt der Datei die Standardausgabe hinzu
		- STDERR 2:
			- 2> /dev/null Ausgabe wird weggeworfen
			- 2> text_file Schreibt Error in Datei
		- Pipes:
			- Pipes sind eine andere Moeglichkeit STDOUT umzuleiten
			- Mit Grep kann der Ouput eines Befehls der Input eines anderen sein
			- Befehl1 | Befehl2 | Befehl3
	- FragenL
		- find / -type f -name *.log 2>/dev/null | wc -l
		- dpkg - l | grep ii | wc -l
6. Filter Contents:
	- More: Gibt den Inhalt eines Verzeichniss im Terminal aus
	- Less: Gibt den Inhalt eines Verzeichniss im Terminal aus, nach schliessen wird das Terminal geleert
	- Head: Gibt die ersten 10 Zeilen einer Datei aus 
	- Tail: Gibt die letzten 10 Zeilen einer Datei aus
	- Sort: Sortiert die Resultate. cat DATEI | sort
	- Grep: Sucht in den Resultaten nach verschiedenen Mustern
	- Cut: Schneidet Ausgabe nach einem Zeichen ab
	- Tr: Ersetzt verschiedene Zeichen mit einem anderen Zeichen
	- Column: Zeigt Daten in Spaltenweise an
	- Awk: Ermoeglicht die Ausgabe von 1-N Spalten einer Zeile der Ausgabe
	- wc: Zaehlt die Anzahl and Zeilen in einer Ausgabe
Test:
	- netstat -l zeigt alle Services an die zuhoeren 
	- ps zeigt Prozesse an
	- curl https://www.inlanefreight.com | grep "https://www.inlanefreight.com" | tr " " "\n" | sort -u | grep -E 'src|href' | sort -u
7. Permission Management:
	- Unter Linux werden Rechte Usern und Gruppen zugeordnet
	- Um durch Verzeichnisse travessiren zu koennen benoetigt ein User Rechte zum ausfuehren
	- Die Rechte zum ausfuehren geben dem User nicht das Recht Dateien im Verzeichnis zu aendern
	- Um Dateien auszufuehren benoetigt der User die Ausfuehrrechte
	- Um in einem Verzeichnis Dateien loeschen, erstellen und umbennen koennen oder Unterverzeichnisse zu erstellen benoetigt der User write Rechte
	- Es gibt 3 Rechte, r Read, w Write, x Execute
	- Die Rechte koennen fuer Eigentuemer, Gruppe und Andere gesetzt werden
	- Dateien werden im folgenden Format ausgegeben:
		- Das erste Zeichen ist: -= File d=Verzeichnis l=Link
		- Die naechsten 3 sind Rechte fuer Besitzer: r=read, w=write, x=execute
		- Die naechsten 3 sind Rechte fuer Gruppe: r=read, w=write, x=execute
		- Die naechsten 3 sind Rechte fuer andere: r=read, w=write, x=execute
		- Nummer von hard links
		- User
		- Gruppe
		- Datei groesse
		- Datum der Erzeugung

	- Change Permissions:
		- chmod <group> +/i <Rechte>:
			- u=Owner
			- g=Group
			- o=Others
			- a=All users
			- Rechte sind read, write, execute
			- Rechte koennen auch fuer alle Gruppen gesetzt werden
			- chmod 777 Alle Gruppen haben alle Rechte
	- Change Owner:
		- chown <user>:<group> <file/directory>
	- SUID & GUID:
		- Setzt SUID bit und GUID bi
		- SUID= Set User ID, GUID= Set Group ID
		- Der Admin kann dieses Bit setzen wenn er User spezielle Rechte fuer Dateien oder Verzeichnisse einraeumen will
		- Wenn der admin den SUID bit auf jurnalctl setzt, darf der user eine Shell als root ausfuehren 
	- Sticky Bit:
		- Das Sticky Bit ersetzt bei den Rechten die ausfuehrrechte fuer andere.
		- t=Ausfuehrrecht ist gesetzt, T=Ausfuehrrecht ist nicht gesetzt
		- Das Sticky bit wird an die Rechte mit einem t rangehange
		- Mit dem Sticky bit darf nur der Eigentuemer Dateien oder Verzeichnisse loeschen oder aendern

#####################################################################################
Tips & Tricks:
1. Shortcuts:
	- Strg + A: Anfang der Zeile
	- Strg + E: ende der Zeile
	- Strg + +: Zoom in
	- Strg + -: Zoom out
2. Linux Security:
	- Fuer das Linux Betriebssystem gibt es nicht so viele Viren, da die meisten Systeme auf Windows laufen oder keine grosse Angriffsflaeche bieten wie Active Directory
	- Die wichtigste Massnahme fuer Sicherheit ist das aktuell halten aller Pakete
	- Unter iptables kann der Traffic in und aus dem Host kontrolliert werden
	- SSH sollte so konfiguriert sein, dass password Logins und Logins vom root user verboten sind
	- Der User sollte immer das niedrigste Privilig bekommen
	- Wenn ein User eine Befehl als root ausfuehren soll sollte der Befhl in sudoers aufgefuehrt sein
	- fail2ban zaehlt die Fehlversuche fuer das anmelden am System
	- Ansonsten muessen alle Rechte der User von Zeit zu Zeit ueberprueft werden
	- Services und jobs muessen auch kontrolliert werden
	- Kernels muessen manchmal manuell geupgraded werden
	- Ein weiters Tool um Linux Systeme abzuschliessen ist Security-Enhanced Linux (SELinux) oder AppArmor. In SELinux bekommt jeder Prozess, Datei, Verzeichnis und System Objekt ein label. Mit diesen labels ist es moeglich Richtlinien zu erstellen die kontrollieren welche Verbindung zwischen Labels herschen darf. Kontrolliert werden kann auch auf welche Ressourcen ein User Zugriff hat.
	- Andere Werkzeuge fuer Sicherheit sind Snort, shkrootkit, rkhunter, Lynis und andere
	- Folgende Regeln sollte man ausserdem einhalten:
	- Removing or disabling all unnecessary services and software
	- Removing all services that rely on unencrypted authentication mechanisms
	- Ensure NTP is enabled and Syslog is running
	- Ensure that each user has its own account
	- Enforce the use of strong passwords
	- Set up password aging and restrict the use of previous passwords
	- Locking user accounts after login failures
	- Disable all unwanted SUID/SGID binaries

	- TCP Wrapper:
		- TCP ist ein Sicherheitsmechanismus welches Services Zugriff zum System erlaubt oder verbietet.
		- Der TCP Wrapper erlaubt nur fuer vordefinierte IPs den Zugriff auf das System, falls diese Bedingungen nicht zutreffen verbietet er den Zugriff.
		- TCP Wrapper ist kein Ersatz fuer eine Firewall da sie auf services limitiert sind und Ports nicht abfragen koennen 
		- Die Konfiguration fuer den TCP Wrapper befindet sich in:
			- /etc/host.allow: Erlaubt Zugang zum System 
			- /etc/host.deny: Verbietet Zugang zum System